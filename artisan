#!/usr/bin/env php
<?php

/*
|--------------------------------------------------------------------------
| Run the artisan clear-compiled command without loading the framework
|--------------------------------------------------------------------------
|
| When running composer update, laravel runs the clear-compiled command.
| Under most circumstances this works fine, however if your package
| requirements change, and your updating via version control there is
| potential for this to fail as your providers config array could differ
| from whats installed causing the application to fail during provider 
| registration. This snippet simply short circuits artisan and runs the
| same functionality as the command, but without Application creation.
| This doesnt remove the actual clear-compiled command from artisan, as
| using the Artisan::call() method would still result in the command being 
| used and not this.
|
*/
if (php_sapi_name() == 'cli' && isset($_SERVER['argv'])) {

    $argv = $_SERVER['argv'];

    if (count($argv) == 2 && 'artisan' == substr($argv[0], -7) && 'clear-compiled' == $argv[1]) {
        $files = glob('./bootstrap/cache/*');
        foreach ($files as $file) {
            if (file_exists($file)) {
                @unlink($file);
            }
        }
        exit();
    }
    
}

/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader
| for our application. We just need to utilize it! We'll require it
| into the script here so that we do not have to worry about the
| loading of any our classes "manually". Feels great to relax.
|
*/

require __DIR__.'/bootstrap/autoload.php';

$app = require_once __DIR__.'/bootstrap/app.php';

/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);

$status = $kernel->handle(
    $input = new Symfony\Component\Console\Input\ArgvInput,
    new Symfony\Component\Console\Output\ConsoleOutput
);

/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running, we will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

$kernel->terminate($input, $status);

exit($status);
