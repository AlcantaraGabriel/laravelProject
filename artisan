#!/usr/bin/env php
<?php

$bootstrapPath = __DIR__.'/bootstrap';

/*
    Composer may call "clear-compiled" before installing the autoloader for
    the first time. In this particular case, we'll try to do the cleanup
    here, then exit as artisan won't be able to continue nevertheless.
*/
if (isset($argv[1]) && $argv[1] == 'clear-compiled' && ! file_exists(__DIR__.'/vendor/autoload.php')) {
    @unlink($bootstrapPath.'/cache/compiled.php');
    @unlink($bootstrapPath.'/cache/services.json');
    exit;
}

/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader
| for our application. We just need to utilize it! We'll require it
| into the script here so that we do not have to worry about the
| loading of any our classes "manually". Feels great to relax.
|
*/

require $bootstrapPath.'/autoload.php';

$app = require_once $bootstrapPath.'/app.php';

/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);

$status = $kernel->handle(
    $input = new Symfony\Component\Console\Input\ArgvInput,
    new Symfony\Component\Console\Output\ConsoleOutput
);

/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running, we will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

$kernel->terminate($input, $status);

exit($status);
